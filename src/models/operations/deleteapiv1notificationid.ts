/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiV1NotificationIdRequest = {
  id: number;
};

/** @internal */
export const DeleteApiV1NotificationIdRequest$inboundSchema: z.ZodType<
  DeleteApiV1NotificationIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type DeleteApiV1NotificationIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const DeleteApiV1NotificationIdRequest$outboundSchema: z.ZodType<
  DeleteApiV1NotificationIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiV1NotificationIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiV1NotificationIdRequest$ {
  /** @deprecated use `DeleteApiV1NotificationIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiV1NotificationIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiV1NotificationIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiV1NotificationIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiV1NotificationIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiV1NotificationIdRequest$Outbound;
}

export function deleteApiV1NotificationIdRequestToJSON(
  deleteApiV1NotificationIdRequest: DeleteApiV1NotificationIdRequest,
): string {
  return JSON.stringify(
    DeleteApiV1NotificationIdRequest$outboundSchema.parse(
      deleteApiV1NotificationIdRequest,
    ),
  );
}

export function deleteApiV1NotificationIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiV1NotificationIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiV1NotificationIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiV1NotificationIdRequest' from JSON`,
  );
}
