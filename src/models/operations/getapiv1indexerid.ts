/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiV1IndexerIdRequest = {
  id: number;
};

/** @internal */
export const GetApiV1IndexerIdRequest$inboundSchema: z.ZodType<
  GetApiV1IndexerIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetApiV1IndexerIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetApiV1IndexerIdRequest$outboundSchema: z.ZodType<
  GetApiV1IndexerIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiV1IndexerIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1IndexerIdRequest$ {
  /** @deprecated use `GetApiV1IndexerIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiV1IndexerIdRequest$inboundSchema;
  /** @deprecated use `GetApiV1IndexerIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiV1IndexerIdRequest$outboundSchema;
  /** @deprecated use `GetApiV1IndexerIdRequest$Outbound` instead. */
  export type Outbound = GetApiV1IndexerIdRequest$Outbound;
}

export function getApiV1IndexerIdRequestToJSON(
  getApiV1IndexerIdRequest: GetApiV1IndexerIdRequest,
): string {
  return JSON.stringify(
    GetApiV1IndexerIdRequest$outboundSchema.parse(getApiV1IndexerIdRequest),
  );
}

export function getApiV1IndexerIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiV1IndexerIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiV1IndexerIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiV1IndexerIdRequest' from JSON`,
  );
}
