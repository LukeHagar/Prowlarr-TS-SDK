/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PutApiV1ConfigDevelopmentIdRequest = {
  id: string;
  developmentConfigResource?: models.DevelopmentConfigResource | undefined;
};

/** @internal */
export const PutApiV1ConfigDevelopmentIdRequest$inboundSchema: z.ZodType<
  PutApiV1ConfigDevelopmentIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  DevelopmentConfigResource: models.DevelopmentConfigResource$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "DevelopmentConfigResource": "developmentConfigResource",
  });
});

/** @internal */
export type PutApiV1ConfigDevelopmentIdRequest$Outbound = {
  id: string;
  DevelopmentConfigResource?:
    | models.DevelopmentConfigResource$Outbound
    | undefined;
};

/** @internal */
export const PutApiV1ConfigDevelopmentIdRequest$outboundSchema: z.ZodType<
  PutApiV1ConfigDevelopmentIdRequest$Outbound,
  z.ZodTypeDef,
  PutApiV1ConfigDevelopmentIdRequest
> = z.object({
  id: z.string(),
  developmentConfigResource: models.DevelopmentConfigResource$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    developmentConfigResource: "DevelopmentConfigResource",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiV1ConfigDevelopmentIdRequest$ {
  /** @deprecated use `PutApiV1ConfigDevelopmentIdRequest$inboundSchema` instead. */
  export const inboundSchema = PutApiV1ConfigDevelopmentIdRequest$inboundSchema;
  /** @deprecated use `PutApiV1ConfigDevelopmentIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutApiV1ConfigDevelopmentIdRequest$outboundSchema;
  /** @deprecated use `PutApiV1ConfigDevelopmentIdRequest$Outbound` instead. */
  export type Outbound = PutApiV1ConfigDevelopmentIdRequest$Outbound;
}

export function putApiV1ConfigDevelopmentIdRequestToJSON(
  putApiV1ConfigDevelopmentIdRequest: PutApiV1ConfigDevelopmentIdRequest,
): string {
  return JSON.stringify(
    PutApiV1ConfigDevelopmentIdRequest$outboundSchema.parse(
      putApiV1ConfigDevelopmentIdRequest,
    ),
  );
}

export function putApiV1ConfigDevelopmentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutApiV1ConfigDevelopmentIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiV1ConfigDevelopmentIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiV1ConfigDevelopmentIdRequest' from JSON`,
  );
}
