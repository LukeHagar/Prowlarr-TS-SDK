/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiV1ConfigDevelopmentIdRequest = {
  id: number;
};

/** @internal */
export const GetApiV1ConfigDevelopmentIdRequest$inboundSchema: z.ZodType<
  GetApiV1ConfigDevelopmentIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetApiV1ConfigDevelopmentIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetApiV1ConfigDevelopmentIdRequest$outboundSchema: z.ZodType<
  GetApiV1ConfigDevelopmentIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiV1ConfigDevelopmentIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1ConfigDevelopmentIdRequest$ {
  /** @deprecated use `GetApiV1ConfigDevelopmentIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiV1ConfigDevelopmentIdRequest$inboundSchema;
  /** @deprecated use `GetApiV1ConfigDevelopmentIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiV1ConfigDevelopmentIdRequest$outboundSchema;
  /** @deprecated use `GetApiV1ConfigDevelopmentIdRequest$Outbound` instead. */
  export type Outbound = GetApiV1ConfigDevelopmentIdRequest$Outbound;
}

export function getApiV1ConfigDevelopmentIdRequestToJSON(
  getApiV1ConfigDevelopmentIdRequest: GetApiV1ConfigDevelopmentIdRequest,
): string {
  return JSON.stringify(
    GetApiV1ConfigDevelopmentIdRequest$outboundSchema.parse(
      getApiV1ConfigDevelopmentIdRequest,
    ),
  );
}

export function getApiV1ConfigDevelopmentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiV1ConfigDevelopmentIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiV1ConfigDevelopmentIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiV1ConfigDevelopmentIdRequest' from JSON`,
  );
}
