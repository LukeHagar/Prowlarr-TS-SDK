/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiV1LogFileUpdateFilenameRequest = {
  filename: string;
};

/** @internal */
export const GetApiV1LogFileUpdateFilenameRequest$inboundSchema: z.ZodType<
  GetApiV1LogFileUpdateFilenameRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  filename: z.string(),
});

/** @internal */
export type GetApiV1LogFileUpdateFilenameRequest$Outbound = {
  filename: string;
};

/** @internal */
export const GetApiV1LogFileUpdateFilenameRequest$outboundSchema: z.ZodType<
  GetApiV1LogFileUpdateFilenameRequest$Outbound,
  z.ZodTypeDef,
  GetApiV1LogFileUpdateFilenameRequest
> = z.object({
  filename: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1LogFileUpdateFilenameRequest$ {
  /** @deprecated use `GetApiV1LogFileUpdateFilenameRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiV1LogFileUpdateFilenameRequest$inboundSchema;
  /** @deprecated use `GetApiV1LogFileUpdateFilenameRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiV1LogFileUpdateFilenameRequest$outboundSchema;
  /** @deprecated use `GetApiV1LogFileUpdateFilenameRequest$Outbound` instead. */
  export type Outbound = GetApiV1LogFileUpdateFilenameRequest$Outbound;
}

export function getApiV1LogFileUpdateFilenameRequestToJSON(
  getApiV1LogFileUpdateFilenameRequest: GetApiV1LogFileUpdateFilenameRequest,
): string {
  return JSON.stringify(
    GetApiV1LogFileUpdateFilenameRequest$outboundSchema.parse(
      getApiV1LogFileUpdateFilenameRequest,
    ),
  );
}

export function getApiV1LogFileUpdateFilenameRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiV1LogFileUpdateFilenameRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiV1LogFileUpdateFilenameRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiV1LogFileUpdateFilenameRequest' from JSON`,
  );
}
