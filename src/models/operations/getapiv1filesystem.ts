/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiV1FilesystemRequest = {
  path?: string | undefined;
  includeFiles?: boolean | undefined;
  allowFoldersWithoutTrailingSlashes?: boolean | undefined;
};

/** @internal */
export const GetApiV1FilesystemRequest$inboundSchema: z.ZodType<
  GetApiV1FilesystemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string().optional(),
  includeFiles: z.boolean().default(false),
  allowFoldersWithoutTrailingSlashes: z.boolean().default(false),
});

/** @internal */
export type GetApiV1FilesystemRequest$Outbound = {
  path?: string | undefined;
  includeFiles: boolean;
  allowFoldersWithoutTrailingSlashes: boolean;
};

/** @internal */
export const GetApiV1FilesystemRequest$outboundSchema: z.ZodType<
  GetApiV1FilesystemRequest$Outbound,
  z.ZodTypeDef,
  GetApiV1FilesystemRequest
> = z.object({
  path: z.string().optional(),
  includeFiles: z.boolean().default(false),
  allowFoldersWithoutTrailingSlashes: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1FilesystemRequest$ {
  /** @deprecated use `GetApiV1FilesystemRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiV1FilesystemRequest$inboundSchema;
  /** @deprecated use `GetApiV1FilesystemRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiV1FilesystemRequest$outboundSchema;
  /** @deprecated use `GetApiV1FilesystemRequest$Outbound` instead. */
  export type Outbound = GetApiV1FilesystemRequest$Outbound;
}

export function getApiV1FilesystemRequestToJSON(
  getApiV1FilesystemRequest: GetApiV1FilesystemRequest,
): string {
  return JSON.stringify(
    GetApiV1FilesystemRequest$outboundSchema.parse(getApiV1FilesystemRequest),
  );
}

export function getApiV1FilesystemRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiV1FilesystemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiV1FilesystemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiV1FilesystemRequest' from JSON`,
  );
}
