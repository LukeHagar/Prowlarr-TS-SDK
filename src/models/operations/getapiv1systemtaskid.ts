/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiV1SystemTaskIdRequest = {
  id: number;
};

/** @internal */
export const GetApiV1SystemTaskIdRequest$inboundSchema: z.ZodType<
  GetApiV1SystemTaskIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetApiV1SystemTaskIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetApiV1SystemTaskIdRequest$outboundSchema: z.ZodType<
  GetApiV1SystemTaskIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiV1SystemTaskIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1SystemTaskIdRequest$ {
  /** @deprecated use `GetApiV1SystemTaskIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiV1SystemTaskIdRequest$inboundSchema;
  /** @deprecated use `GetApiV1SystemTaskIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiV1SystemTaskIdRequest$outboundSchema;
  /** @deprecated use `GetApiV1SystemTaskIdRequest$Outbound` instead. */
  export type Outbound = GetApiV1SystemTaskIdRequest$Outbound;
}

export function getApiV1SystemTaskIdRequestToJSON(
  getApiV1SystemTaskIdRequest: GetApiV1SystemTaskIdRequest,
): string {
  return JSON.stringify(
    GetApiV1SystemTaskIdRequest$outboundSchema.parse(
      getApiV1SystemTaskIdRequest,
    ),
  );
}

export function getApiV1SystemTaskIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiV1SystemTaskIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiV1SystemTaskIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiV1SystemTaskIdRequest' from JSON`,
  );
}
