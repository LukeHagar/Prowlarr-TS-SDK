/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const MovieSearchParam = {
  Q: "q",
  ImdbId: "imdbId",
  TmdbId: "tmdbId",
  ImdbTitle: "imdbTitle",
  ImdbYear: "imdbYear",
  TraktId: "traktId",
  Genre: "genre",
  DoubanId: "doubanId",
  Year: "year",
} as const;
export type MovieSearchParam = ClosedEnum<typeof MovieSearchParam>;

/** @internal */
export const MovieSearchParam$inboundSchema: z.ZodNativeEnum<
  typeof MovieSearchParam
> = z.nativeEnum(MovieSearchParam);

/** @internal */
export const MovieSearchParam$outboundSchema: z.ZodNativeEnum<
  typeof MovieSearchParam
> = MovieSearchParam$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MovieSearchParam$ {
  /** @deprecated use `MovieSearchParam$inboundSchema` instead. */
  export const inboundSchema = MovieSearchParam$inboundSchema;
  /** @deprecated use `MovieSearchParam$outboundSchema` instead. */
  export const outboundSchema = MovieSearchParam$outboundSchema;
}
