/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const TvSearchParam = {
  Q: "q",
  Season: "season",
  Ep: "ep",
  ImdbId: "imdbId",
  TvdbId: "tvdbId",
  RId: "rId",
  TvMazeId: "tvMazeId",
  TraktId: "traktId",
  TmdbId: "tmdbId",
  DoubanId: "doubanId",
  Genre: "genre",
  Year: "year",
} as const;
export type TvSearchParam = ClosedEnum<typeof TvSearchParam>;

/** @internal */
export const TvSearchParam$inboundSchema: z.ZodNativeEnum<
  typeof TvSearchParam
> = z.nativeEnum(TvSearchParam);

/** @internal */
export const TvSearchParam$outboundSchema: z.ZodNativeEnum<
  typeof TvSearchParam
> = TvSearchParam$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TvSearchParam$ {
  /** @deprecated use `TvSearchParam$inboundSchema` instead. */
  export const inboundSchema = TvSearchParam$inboundSchema;
  /** @deprecated use `TvSearchParam$outboundSchema` instead. */
  export const outboundSchema = TvSearchParam$outboundSchema;
}
