/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const MusicSearchParam = {
  Q: "q",
  Album: "album",
  Artist: "artist",
  Label: "label",
  Year: "year",
  Genre: "genre",
  Track: "track",
} as const;
export type MusicSearchParam = ClosedEnum<typeof MusicSearchParam>;

/** @internal */
export const MusicSearchParam$inboundSchema: z.ZodNativeEnum<
  typeof MusicSearchParam
> = z.nativeEnum(MusicSearchParam);

/** @internal */
export const MusicSearchParam$outboundSchema: z.ZodNativeEnum<
  typeof MusicSearchParam
> = MusicSearchParam$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MusicSearchParam$ {
  /** @deprecated use `MusicSearchParam$inboundSchema` instead. */
  export const inboundSchema = MusicSearchParam$inboundSchema;
  /** @deprecated use `MusicSearchParam$outboundSchema` instead. */
  export const outboundSchema = MusicSearchParam$outboundSchema;
}
