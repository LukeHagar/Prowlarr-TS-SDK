/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export const SearchParam = {
  Q: "q",
} as const;
export type SearchParam = ClosedEnum<typeof SearchParam>;

/** @internal */
export const SearchParam$inboundSchema: z.ZodNativeEnum<typeof SearchParam> = z
  .nativeEnum(SearchParam);

/** @internal */
export const SearchParam$outboundSchema: z.ZodNativeEnum<typeof SearchParam> =
  SearchParam$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SearchParam$ {
  /** @deprecated use `SearchParam$inboundSchema` instead. */
  export const inboundSchema = SearchParam$inboundSchema;
  /** @deprecated use `SearchParam$outboundSchema` instead. */
  export const outboundSchema = SearchParam$outboundSchema;
}
