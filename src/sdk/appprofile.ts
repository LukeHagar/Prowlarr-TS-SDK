/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appProfileDeleteApiV1AppprofileId } from "../funcs/appProfileDeleteApiV1AppprofileId.js";
import { appProfileGetApiV1Appprofile } from "../funcs/appProfileGetApiV1Appprofile.js";
import { appProfileGetApiV1AppprofileId } from "../funcs/appProfileGetApiV1AppprofileId.js";
import { appProfileGetApiV1AppprofileSchema } from "../funcs/appProfileGetApiV1AppprofileSchema.js";
import { appProfilePostApiV1Appprofile } from "../funcs/appProfilePostApiV1Appprofile.js";
import { appProfilePutApiV1AppprofileId } from "../funcs/appProfilePutApiV1AppprofileId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AppProfile extends ClientSDK {
  async postApiV1Appprofile(
    request?: models.AppProfileResource | undefined,
    options?: RequestOptions,
  ): Promise<models.AppProfileResource> {
    return unwrapAsync(appProfilePostApiV1Appprofile(
      this,
      request,
      options,
    ));
  }

  async getApiV1Appprofile(
    options?: RequestOptions,
  ): Promise<Array<models.AppProfileResource>> {
    return unwrapAsync(appProfileGetApiV1Appprofile(
      this,
      options,
    ));
  }

  async deleteApiV1AppprofileId(
    request: operations.DeleteApiV1AppprofileIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(appProfileDeleteApiV1AppprofileId(
      this,
      request,
      options,
    ));
  }

  async putApiV1AppprofileId(
    request: operations.PutApiV1AppprofileIdRequest,
    options?: RequestOptions,
  ): Promise<models.AppProfileResource> {
    return unwrapAsync(appProfilePutApiV1AppprofileId(
      this,
      request,
      options,
    ));
  }

  async getApiV1AppprofileId(
    request: operations.GetApiV1AppprofileIdRequest,
    options?: RequestOptions,
  ): Promise<models.AppProfileResource> {
    return unwrapAsync(appProfileGetApiV1AppprofileId(
      this,
      request,
      options,
    ));
  }

  async getApiV1AppprofileSchema(
    options?: RequestOptions,
  ): Promise<models.AppProfileResource> {
    return unwrapAsync(appProfileGetApiV1AppprofileSchema(
      this,
      options,
    ));
  }
}
