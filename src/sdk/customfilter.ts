/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customFilterDeleteApiV1CustomfilterId } from "../funcs/customFilterDeleteApiV1CustomfilterId.js";
import { customFilterGetApiV1Customfilter } from "../funcs/customFilterGetApiV1Customfilter.js";
import { customFilterGetApiV1CustomfilterId } from "../funcs/customFilterGetApiV1CustomfilterId.js";
import { customFilterPostApiV1Customfilter } from "../funcs/customFilterPostApiV1Customfilter.js";
import { customFilterPutApiV1CustomfilterId } from "../funcs/customFilterPutApiV1CustomfilterId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomFilter extends ClientSDK {
  async getApiV1CustomfilterId(
    request: operations.GetApiV1CustomfilterIdRequest,
    options?: RequestOptions,
  ): Promise<models.CustomFilterResource> {
    return unwrapAsync(customFilterGetApiV1CustomfilterId(
      this,
      request,
      options,
    ));
  }

  async putApiV1CustomfilterId(
    request: operations.PutApiV1CustomfilterIdRequest,
    options?: RequestOptions,
  ): Promise<models.CustomFilterResource> {
    return unwrapAsync(customFilterPutApiV1CustomfilterId(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1CustomfilterId(
    request: operations.DeleteApiV1CustomfilterIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(customFilterDeleteApiV1CustomfilterId(
      this,
      request,
      options,
    ));
  }

  async getApiV1Customfilter(
    options?: RequestOptions,
  ): Promise<Array<models.CustomFilterResource>> {
    return unwrapAsync(customFilterGetApiV1Customfilter(
      this,
      options,
    ));
  }

  async postApiV1Customfilter(
    request?: models.CustomFilterResource | undefined,
    options?: RequestOptions,
  ): Promise<models.CustomFilterResource> {
    return unwrapAsync(customFilterPostApiV1Customfilter(
      this,
      request,
      options,
    ));
  }
}
