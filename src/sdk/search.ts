/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchGetApiV1Search } from "../funcs/searchGetApiV1Search.js";
import { searchPostApiV1Search } from "../funcs/searchPostApiV1Search.js";
import { searchPostApiV1SearchBulk } from "../funcs/searchPostApiV1SearchBulk.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Search extends ClientSDK {
  async postApiV1Search(
    request?: models.ReleaseResourceInput | undefined,
    options?: RequestOptions,
  ): Promise<models.ReleaseResource> {
    return unwrapAsync(searchPostApiV1Search(
      this,
      request,
      options,
    ));
  }

  async getApiV1Search(
    request: operations.GetApiV1SearchRequest,
    options?: RequestOptions,
  ): Promise<Array<models.ReleaseResource>> {
    return unwrapAsync(searchGetApiV1Search(
      this,
      request,
      options,
    ));
  }

  async postApiV1SearchBulk(
    request?: Array<models.ReleaseResourceInput> | undefined,
    options?: RequestOptions,
  ): Promise<models.ReleaseResource> {
    return unwrapAsync(searchPostApiV1SearchBulk(
      this,
      request,
      options,
    ));
  }
}
