/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { indexerProxyDeleteApiV1IndexerproxyId } from "../funcs/indexerProxyDeleteApiV1IndexerproxyId.js";
import { indexerProxyGetApiV1Indexerproxy } from "../funcs/indexerProxyGetApiV1Indexerproxy.js";
import { indexerProxyGetApiV1IndexerproxyId } from "../funcs/indexerProxyGetApiV1IndexerproxyId.js";
import { indexerProxyGetApiV1IndexerproxySchema } from "../funcs/indexerProxyGetApiV1IndexerproxySchema.js";
import { indexerProxyPostApiV1Indexerproxy } from "../funcs/indexerProxyPostApiV1Indexerproxy.js";
import { indexerProxyPostApiV1IndexerproxyActionName } from "../funcs/indexerProxyPostApiV1IndexerproxyActionName.js";
import { indexerProxyPostApiV1IndexerproxyTest } from "../funcs/indexerProxyPostApiV1IndexerproxyTest.js";
import { indexerProxyPostApiV1IndexerproxyTestall } from "../funcs/indexerProxyPostApiV1IndexerproxyTestall.js";
import { indexerProxyPutApiV1IndexerproxyId } from "../funcs/indexerProxyPutApiV1IndexerproxyId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class IndexerProxy extends ClientSDK {
  async getApiV1IndexerproxyId(
    request: operations.GetApiV1IndexerproxyIdRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerProxyResource> {
    return unwrapAsync(indexerProxyGetApiV1IndexerproxyId(
      this,
      request,
      options,
    ));
  }

  async putApiV1IndexerproxyId(
    request: operations.PutApiV1IndexerproxyIdRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerProxyResource> {
    return unwrapAsync(indexerProxyPutApiV1IndexerproxyId(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1IndexerproxyId(
    request: operations.DeleteApiV1IndexerproxyIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerProxyDeleteApiV1IndexerproxyId(
      this,
      request,
      options,
    ));
  }

  async getApiV1Indexerproxy(
    options?: RequestOptions,
  ): Promise<Array<models.IndexerProxyResource>> {
    return unwrapAsync(indexerProxyGetApiV1Indexerproxy(
      this,
      options,
    ));
  }

  async postApiV1Indexerproxy(
    request: operations.PostApiV1IndexerproxyRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerProxyResource> {
    return unwrapAsync(indexerProxyPostApiV1Indexerproxy(
      this,
      request,
      options,
    ));
  }

  async getApiV1IndexerproxySchema(
    options?: RequestOptions,
  ): Promise<Array<models.IndexerProxyResource>> {
    return unwrapAsync(indexerProxyGetApiV1IndexerproxySchema(
      this,
      options,
    ));
  }

  async postApiV1IndexerproxyTest(
    request: operations.PostApiV1IndexerproxyTestRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerProxyPostApiV1IndexerproxyTest(
      this,
      request,
      options,
    ));
  }

  async postApiV1IndexerproxyTestall(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerProxyPostApiV1IndexerproxyTestall(
      this,
      options,
    ));
  }

  async postApiV1IndexerproxyActionName(
    request: operations.PostApiV1IndexerproxyActionNameRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerProxyPostApiV1IndexerproxyActionName(
      this,
      request,
      options,
    ));
  }
}
