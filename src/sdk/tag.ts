/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tagDeleteApiV1TagId } from "../funcs/tagDeleteApiV1TagId.js";
import { tagGetApiV1Tag } from "../funcs/tagGetApiV1Tag.js";
import { tagGetApiV1TagId } from "../funcs/tagGetApiV1TagId.js";
import { tagPostApiV1Tag } from "../funcs/tagPostApiV1Tag.js";
import { tagPutApiV1TagId } from "../funcs/tagPutApiV1TagId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tag extends ClientSDK {
  async getApiV1TagId(
    request: operations.GetApiV1TagIdRequest,
    options?: RequestOptions,
  ): Promise<models.TagResource> {
    return unwrapAsync(tagGetApiV1TagId(
      this,
      request,
      options,
    ));
  }

  async putApiV1TagId(
    request: operations.PutApiV1TagIdRequest,
    options?: RequestOptions,
  ): Promise<models.TagResource> {
    return unwrapAsync(tagPutApiV1TagId(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1TagId(
    request: operations.DeleteApiV1TagIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(tagDeleteApiV1TagId(
      this,
      request,
      options,
    ));
  }

  async getApiV1Tag(
    options?: RequestOptions,
  ): Promise<Array<models.TagResource>> {
    return unwrapAsync(tagGetApiV1Tag(
      this,
      options,
    ));
  }

  async postApiV1Tag(
    request?: models.TagResource | undefined,
    options?: RequestOptions,
  ): Promise<models.TagResource> {
    return unwrapAsync(tagPostApiV1Tag(
      this,
      request,
      options,
    ));
  }
}
