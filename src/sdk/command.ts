/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { commandDeleteApiV1CommandId } from "../funcs/commandDeleteApiV1CommandId.js";
import { commandGetApiV1Command } from "../funcs/commandGetApiV1Command.js";
import { commandGetApiV1CommandId } from "../funcs/commandGetApiV1CommandId.js";
import { commandPostApiV1Command } from "../funcs/commandPostApiV1Command.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Command extends ClientSDK {
  async getApiV1CommandId(
    request: operations.GetApiV1CommandIdRequest,
    options?: RequestOptions,
  ): Promise<models.CommandResource> {
    return unwrapAsync(commandGetApiV1CommandId(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1CommandId(
    request: operations.DeleteApiV1CommandIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(commandDeleteApiV1CommandId(
      this,
      request,
      options,
    ));
  }

  async postApiV1Command(
    request?: models.CommandResourceInput | undefined,
    options?: RequestOptions,
  ): Promise<models.CommandResource> {
    return unwrapAsync(commandPostApiV1Command(
      this,
      request,
      options,
    ));
  }

  async getApiV1Command(
    options?: RequestOptions,
  ): Promise<Array<models.CommandResource>> {
    return unwrapAsync(commandGetApiV1Command(
      this,
      options,
    ));
  }
}
