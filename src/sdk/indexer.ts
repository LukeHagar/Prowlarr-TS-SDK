/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { indexerDeleteApiV1IndexerBulk } from "../funcs/indexerDeleteApiV1IndexerBulk.js";
import { indexerDeleteApiV1IndexerId } from "../funcs/indexerDeleteApiV1IndexerId.js";
import { indexerGetApiV1Indexer } from "../funcs/indexerGetApiV1Indexer.js";
import { indexerGetApiV1IndexerId } from "../funcs/indexerGetApiV1IndexerId.js";
import { indexerGetApiV1IndexerSchema } from "../funcs/indexerGetApiV1IndexerSchema.js";
import { indexerPostApiV1Indexer } from "../funcs/indexerPostApiV1Indexer.js";
import { indexerPostApiV1IndexerActionName } from "../funcs/indexerPostApiV1IndexerActionName.js";
import { indexerPostApiV1IndexerTest } from "../funcs/indexerPostApiV1IndexerTest.js";
import { indexerPostApiV1IndexerTestall } from "../funcs/indexerPostApiV1IndexerTestall.js";
import { indexerPutApiV1IndexerBulk } from "../funcs/indexerPutApiV1IndexerBulk.js";
import { indexerPutApiV1IndexerId } from "../funcs/indexerPutApiV1IndexerId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Indexer extends ClientSDK {
  async getApiV1IndexerId(
    request: operations.GetApiV1IndexerIdRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerResource> {
    return unwrapAsync(indexerGetApiV1IndexerId(
      this,
      request,
      options,
    ));
  }

  async putApiV1IndexerId(
    request: operations.PutApiV1IndexerIdRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerResource> {
    return unwrapAsync(indexerPutApiV1IndexerId(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1IndexerId(
    request: operations.DeleteApiV1IndexerIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerDeleteApiV1IndexerId(
      this,
      request,
      options,
    ));
  }

  async getApiV1Indexer(
    options?: RequestOptions,
  ): Promise<Array<models.IndexerResource>> {
    return unwrapAsync(indexerGetApiV1Indexer(
      this,
      options,
    ));
  }

  async postApiV1Indexer(
    request: operations.PostApiV1IndexerRequest,
    options?: RequestOptions,
  ): Promise<models.IndexerResource> {
    return unwrapAsync(indexerPostApiV1Indexer(
      this,
      request,
      options,
    ));
  }

  async putApiV1IndexerBulk(
    request?: models.IndexerBulkResource | undefined,
    options?: RequestOptions,
  ): Promise<models.IndexerResource> {
    return unwrapAsync(indexerPutApiV1IndexerBulk(
      this,
      request,
      options,
    ));
  }

  async deleteApiV1IndexerBulk(
    request?: models.IndexerBulkResource | undefined,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerDeleteApiV1IndexerBulk(
      this,
      request,
      options,
    ));
  }

  async getApiV1IndexerSchema(
    options?: RequestOptions,
  ): Promise<Array<models.IndexerResource>> {
    return unwrapAsync(indexerGetApiV1IndexerSchema(
      this,
      options,
    ));
  }

  async postApiV1IndexerTest(
    request: operations.PostApiV1IndexerTestRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerPostApiV1IndexerTest(
      this,
      request,
      options,
    ));
  }

  async postApiV1IndexerTestall(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerPostApiV1IndexerTestall(
      this,
      options,
    ));
  }

  async postApiV1IndexerActionName(
    request: operations.PostApiV1IndexerActionNameRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(indexerPostApiV1IndexerActionName(
      this,
      request,
      options,
    ));
  }
}
