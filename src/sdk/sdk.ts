/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClientSDK } from "../lib/sdks.js";
import { ApiInfo } from "./apiinfo.js";
import { Application } from "./application.js";
import { AppProfile } from "./appprofile.js";
import { Authentication } from "./authentication.js";
import { Backup } from "./backup.js";
import { Command } from "./command.js";
import { CustomFilter } from "./customfilter.js";
import { DevelopmentConfig } from "./developmentconfig.js";
import { DownloadClient } from "./downloadclient.js";
import { DownloadClientConfig } from "./downloadclientconfig.js";
import { FileSystem } from "./filesystem.js";
import { Health } from "./health.js";
import { History } from "./history.js";
import { HostConfig } from "./hostconfig.js";
import { Indexer } from "./indexer.js";
import { IndexerDefaultCategories } from "./indexerdefaultcategories.js";
import { IndexerProxy } from "./indexerproxy.js";
import { IndexerStats } from "./indexerstats.js";
import { IndexerStatus } from "./indexerstatus.js";
import { Localization } from "./localization.js";
import { Log } from "./log.js";
import { LogFile } from "./logfile.js";
import { Newznab } from "./newznab.js";
import { Notification } from "./notification.js";
import { Ping } from "./ping.js";
import { Search } from "./search.js";
import { StaticResource } from "./staticresource.js";
import { System } from "./system.js";
import { Tag } from "./tag.js";
import { TagDetails } from "./tagdetails.js";
import { Task } from "./task.js";
import { UiConfig } from "./uiconfig.js";
import { Update } from "./update.js";
import { UpdateLogFile } from "./updatelogfile.js";

export class Prowlarr extends ClientSDK {
  private _apiInfo?: ApiInfo;
  get apiInfo(): ApiInfo {
    return (this._apiInfo ??= new ApiInfo(this._options));
  }

  private _application?: Application;
  get application(): Application {
    return (this._application ??= new Application(this._options));
  }

  private _appProfile?: AppProfile;
  get appProfile(): AppProfile {
    return (this._appProfile ??= new AppProfile(this._options));
  }

  private _staticResource?: StaticResource;
  get staticResource(): StaticResource {
    return (this._staticResource ??= new StaticResource(this._options));
  }

  private _authentication?: Authentication;
  get authentication(): Authentication {
    return (this._authentication ??= new Authentication(this._options));
  }

  private _backup?: Backup;
  get backup(): Backup {
    return (this._backup ??= new Backup(this._options));
  }

  private _command?: Command;
  get command(): Command {
    return (this._command ??= new Command(this._options));
  }

  private _customFilter?: CustomFilter;
  get customFilter(): CustomFilter {
    return (this._customFilter ??= new CustomFilter(this._options));
  }

  private _developmentConfig?: DevelopmentConfig;
  get developmentConfig(): DevelopmentConfig {
    return (this._developmentConfig ??= new DevelopmentConfig(this._options));
  }

  private _downloadClient?: DownloadClient;
  get downloadClient(): DownloadClient {
    return (this._downloadClient ??= new DownloadClient(this._options));
  }

  private _downloadClientConfig?: DownloadClientConfig;
  get downloadClientConfig(): DownloadClientConfig {
    return (this._downloadClientConfig ??= new DownloadClientConfig(
      this._options,
    ));
  }

  private _fileSystem?: FileSystem;
  get fileSystem(): FileSystem {
    return (this._fileSystem ??= new FileSystem(this._options));
  }

  private _health?: Health;
  get health(): Health {
    return (this._health ??= new Health(this._options));
  }

  private _history?: History;
  get history(): History {
    return (this._history ??= new History(this._options));
  }

  private _hostConfig?: HostConfig;
  get hostConfig(): HostConfig {
    return (this._hostConfig ??= new HostConfig(this._options));
  }

  private _indexer?: Indexer;
  get indexer(): Indexer {
    return (this._indexer ??= new Indexer(this._options));
  }

  private _indexerDefaultCategories?: IndexerDefaultCategories;
  get indexerDefaultCategories(): IndexerDefaultCategories {
    return (this._indexerDefaultCategories ??= new IndexerDefaultCategories(
      this._options,
    ));
  }

  private _indexerProxy?: IndexerProxy;
  get indexerProxy(): IndexerProxy {
    return (this._indexerProxy ??= new IndexerProxy(this._options));
  }

  private _indexerStats?: IndexerStats;
  get indexerStats(): IndexerStats {
    return (this._indexerStats ??= new IndexerStats(this._options));
  }

  private _indexerStatus?: IndexerStatus;
  get indexerStatus(): IndexerStatus {
    return (this._indexerStatus ??= new IndexerStatus(this._options));
  }

  private _localization?: Localization;
  get localization(): Localization {
    return (this._localization ??= new Localization(this._options));
  }

  private _log?: Log;
  get log(): Log {
    return (this._log ??= new Log(this._options));
  }

  private _logFile?: LogFile;
  get logFile(): LogFile {
    return (this._logFile ??= new LogFile(this._options));
  }

  private _newznab?: Newznab;
  get newznab(): Newznab {
    return (this._newznab ??= new Newznab(this._options));
  }

  private _notification?: Notification;
  get notification(): Notification {
    return (this._notification ??= new Notification(this._options));
  }

  private _ping?: Ping;
  get ping(): Ping {
    return (this._ping ??= new Ping(this._options));
  }

  private _search?: Search;
  get search(): Search {
    return (this._search ??= new Search(this._options));
  }

  private _system?: System;
  get system(): System {
    return (this._system ??= new System(this._options));
  }

  private _tag?: Tag;
  get tag(): Tag {
    return (this._tag ??= new Tag(this._options));
  }

  private _tagDetails?: TagDetails;
  get tagDetails(): TagDetails {
    return (this._tagDetails ??= new TagDetails(this._options));
  }

  private _task?: Task;
  get task(): Task {
    return (this._task ??= new Task(this._options));
  }

  private _uiConfig?: UiConfig;
  get uiConfig(): UiConfig {
    return (this._uiConfig ??= new UiConfig(this._options));
  }

  private _update?: Update;
  get update(): Update {
    return (this._update ??= new Update(this._options));
  }

  private _updateLogFile?: UpdateLogFile;
  get updateLogFile(): UpdateLogFile {
    return (this._updateLogFile ??= new UpdateLogFile(this._options));
  }
}
